
# BASIC COMMANDS FOR APPLICATIONS


### JAVA
-To check the version of java
java -version

-We have created MyClass.java file inside /opt/app directory. View it if you like using the command cat MyClass.java. Please compile it.
cd /opt/app/
javac MyClass.java

-Run the compiled application and identify which among the below does it print.
Execute the command cd /opt/app/; java MyClass to run the application.

-Generate documentation for the MyClass.java source code into the /opt/app/doc directory.
Run: cd /opt/app/; javadoc -d doc MyClass.java to document and see an output

-Install the Apache Ant build tool on host01 server.
sudo yum install -y ant

-Compile and generate jar package using ant. You can ignore the warnings which are generated by the ant command.
Run: "ant compile jar" inside /opt/ant directory.

-Run ant to carry out all steps specified in the build configuration file /opt/ant/build.xml.
Run: "ant" inside /opt/ant directory.

-What is output when you run target java with ant in previous step?
run:
     [java] Hello Kodekloud

-Install the maven build automation tool
Run: "sudo yum install -y maven" to install maven

-We have downloaded an application named my-app to the directory - /opt/maven/. Please check /opt/maven/my-app/pom.xml on host01 server for maven. What is artifactId for main app when you build maven package?
<groupId>com.mycompany.app</groupId>
  <artifactId>my-app</artifactId>
  <version>1.0-SNAPSHOT</version>

-Please compile and package the application inside /opt/maven/my-app/ with maven
"sudo mvn package" to build with maven.

-What is output for main app when you run /opt/maven/my-app/target/my-app-1.0-SNAPSHOT.jar created with maven package?
=Execute "java -cp /opt/maven/my-app/target/my-app-1.0-SNAPSHOT.jar com.mycompany.app.App"
Hello World!
